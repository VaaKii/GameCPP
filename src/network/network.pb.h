// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_network_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_network_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_network_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_network_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_network_2eproto;
class UpdatePlayer;
class UpdatePlayerDefaultTypeInternal;
extern UpdatePlayerDefaultTypeInternal _UpdatePlayer_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::UpdatePlayer* Arena::CreateMaybeMessage<::UpdatePlayer>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class UpdatePlayer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UpdatePlayer) */ {
 public:
  inline UpdatePlayer() : UpdatePlayer(nullptr) {};
  virtual ~UpdatePlayer();

  UpdatePlayer(const UpdatePlayer& from);
  UpdatePlayer(UpdatePlayer&& from) noexcept
    : UpdatePlayer() {
    *this = ::std::move(from);
  }

  inline UpdatePlayer& operator=(const UpdatePlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdatePlayer& operator=(UpdatePlayer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdatePlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdatePlayer* internal_default_instance() {
    return reinterpret_cast<const UpdatePlayer*>(
               &_UpdatePlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UpdatePlayer& a, UpdatePlayer& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdatePlayer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdatePlayer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdatePlayer* New() const final {
    return CreateMaybeMessage<UpdatePlayer>(nullptr);
  }

  UpdatePlayer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdatePlayer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdatePlayer& from);
  void MergeFrom(const UpdatePlayer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdatePlayer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UpdatePlayer";
  }
  protected:
  explicit UpdatePlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_network_2eproto);
    return ::descriptor_table_network_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPosXFieldNumber = 1,
    kPosYFieldNumber = 2,
    kSizeXFieldNumber = 3,
    kSizeYFieldNumber = 4,
  };
  // float posX = 1;
  void clear_posx();
  float posx() const;
  void set_posx(float value);
  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);
  public:

  // float posY = 2;
  void clear_posy();
  float posy() const;
  void set_posy(float value);
  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);
  public:

  // float sizeX = 3;
  void clear_sizex();
  float sizex() const;
  void set_sizex(float value);
  private:
  float _internal_sizex() const;
  void _internal_set_sizex(float value);
  public:

  // float sizeY = 4;
  void clear_sizey();
  float sizey() const;
  void set_sizey(float value);
  private:
  float _internal_sizey() const;
  void _internal_set_sizey(float value);
  public:

  // @@protoc_insertion_point(class_scope:UpdatePlayer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float posx_;
  float posy_;
  float sizex_;
  float sizey_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_network_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UpdatePlayer

// float posX = 1;
inline void UpdatePlayer::clear_posx() {
  posx_ = 0;
}
inline float UpdatePlayer::_internal_posx() const {
  return posx_;
}
inline float UpdatePlayer::posx() const {
  // @@protoc_insertion_point(field_get:UpdatePlayer.posX)
  return _internal_posx();
}
inline void UpdatePlayer::_internal_set_posx(float value) {
  
  posx_ = value;
}
inline void UpdatePlayer::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:UpdatePlayer.posX)
}

// float posY = 2;
inline void UpdatePlayer::clear_posy() {
  posy_ = 0;
}
inline float UpdatePlayer::_internal_posy() const {
  return posy_;
}
inline float UpdatePlayer::posy() const {
  // @@protoc_insertion_point(field_get:UpdatePlayer.posY)
  return _internal_posy();
}
inline void UpdatePlayer::_internal_set_posy(float value) {
  
  posy_ = value;
}
inline void UpdatePlayer::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:UpdatePlayer.posY)
}

// float sizeX = 3;
inline void UpdatePlayer::clear_sizex() {
  sizex_ = 0;
}
inline float UpdatePlayer::_internal_sizex() const {
  return sizex_;
}
inline float UpdatePlayer::sizex() const {
  // @@protoc_insertion_point(field_get:UpdatePlayer.sizeX)
  return _internal_sizex();
}
inline void UpdatePlayer::_internal_set_sizex(float value) {
  
  sizex_ = value;
}
inline void UpdatePlayer::set_sizex(float value) {
  _internal_set_sizex(value);
  // @@protoc_insertion_point(field_set:UpdatePlayer.sizeX)
}

// float sizeY = 4;
inline void UpdatePlayer::clear_sizey() {
  sizey_ = 0;
}
inline float UpdatePlayer::_internal_sizey() const {
  return sizey_;
}
inline float UpdatePlayer::sizey() const {
  // @@protoc_insertion_point(field_get:UpdatePlayer.sizeY)
  return _internal_sizey();
}
inline void UpdatePlayer::_internal_set_sizey(float value) {
  
  sizey_ = value;
}
inline void UpdatePlayer::set_sizey(float value) {
  _internal_set_sizey(value);
  // @@protoc_insertion_point(field_set:UpdatePlayer.sizeY)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_network_2eproto
